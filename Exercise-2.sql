-- Exercise 2
-- Normalized tables



CREATE TABLE SUPPLIERS (
    SUPPLIER_ID    NUMBER PRIMARY KEY,
    SUPPLIER_NAME  VARCHAR2(255) NOT NULL,
    CONTACT_NAME   VARCHAR2(255),
    CONTACT_NUMBER VARCHAR2(50) NOT NULL,
    EMAIL          VARCHAR2(100)
);

CREATE TABLE SUPP_CONTACTS (
    CONTACT_ID     NUMBER PRIMARY KEY,
    SUPPLIER_ID    NUMBER NOT NULL,
    CONTACT_NUMBER VARCHAR2(50) NOT NULL,
    CONSTRAINT FK_SUPPLIER_CONTACT FOREIGN KEY ( SUPPLIER_ID )
        REFERENCES SUPPLIERS ( SUPPLIER_ID )
);

CREATE TABLE SUPP_ADDRESS (
    ADDRESS_ID  NUMBER PRIMARY KEY,
    SUPPLIER_ID NUMBER NOT NULL,
    STREET_NO   VARCHAR2(255),
    STREET_NAME VARCHAR2(100),
    REGION      VARCHAR2(100),
    CITY        VARCHAR2(20),
    COUNTRY     VARCHAR2(100),
    CONSTRAINT FK_SUPPLIER_ADDRESS FOREIGN KEY ( SUPPLIER_ID )
        REFERENCES SUPPLIERS ( SUPPLIER_ID )
);

-- Orders Table
CREATE TABLE ORDERS (
    ORDER_ID     NUMBER PRIMARY KEY,
    ORDER_REF    VARCHAR2(50) UNIQUE NOT NULL,
    ORDER_DATE   VARCHAR2(20) NOT NULL,
    TOTAL_AMOUNT NUMBER(12, 2) NOT NULL,
    ORDER_STATUS VARCHAR2(50) NOT NULL,
    SUPPLIER_ID  NUMBER NOT NULL,
    CONSTRAINT FK_SUPPLIER FOREIGN KEY ( SUPPLIER_ID )
        REFERENCES SUPPLIERS ( SUPPLIER_ID )
);


-- Order line Table
CREATE TABLE ORDER_LINES (
    ORDER_LINE_ID  NUMBER PRIMARY KEY,
    ORDER_ID       NUMBER NOT NULL,
    ORDER_DESC     VARCHAR2(255),
    ORDER_LINE_AMT NUMBER(12, 2) NOT NULL,
    CONSTRAINT FK_ORDER FOREIGN KEY ( ORDER_ID )
        REFERENCES ORDERS ( ORDER_ID )
);

-- Invoices Table
CREATE TABLE INVOICES (
    INVOICE_ID     NUMBER PRIMARY KEY,
    ORDER_ID,
    ORDER_LINE_ID  NUMBER NOT NULL,
    INVOICE_REF    VARCHAR2(50),
    INVOICE_DATE   VARCHAR2(20) NOT NULL,
    INVOICE_STATUS VARCHAR2(50),
    HOLD_REASON    VARCHAR2(255),
    INVOICE_AMT    NUMBER(12, 2) NOT NULL,
    INVOICE_DESC   VARCHAR2(255),
    CONSTRAINT FK_ORDER_LINE FOREIGN KEY ( ORDER_LINE_ID )
        REFERENCES ORDER_LINES ( ORDER_LINE_ID ),
    CONSTRAINT FK_ORDER_ID FOREIGN KEY ( ORDER_ID )
        REFERENCES ORDERS ( ORDER_ID )
);


